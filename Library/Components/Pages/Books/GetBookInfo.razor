@page "/book-info/{bookId:int}"
@inject Library.Services.Books.GetBookInfo getBookInfoService

<h3>Book Information</h3>
@if (isLoading)
{
    <p>Loading...</p>
}
else if (bookInfoItem == null)
{
    <p>No book information found.</p>
}
else
{
    <div class="book-card">
        <img src="@bookInfoItem.Cover" alt="@bookInfoItem.Name" />
        <h3>@bookInfoItem.Name</h3>
        <p>Authors: @string.Join(", ", bookInfoItem.Authors)</p>
        <p>Rating: @bookInfoItem.Rating</p>
        <p>Pages: @bookInfoItem.Pages</p>
        <p>Synopsis: @bookInfoItem.Synopsis</p>
    </div>
}

@code {
    private BookInfoItems bookInfoItem; // Changed to single object
    private bool isLoading = false;

    [Parameter]
    public int bookId { get; set; }

    protected override async Task OnInitializedAsync()
    {
        await GetBook();
    }

    private async Task GetBook()
    {
        isLoading = true;
        try
        {
            bookInfoItem = await getBookInfoService.GetBookInfoAsync(bookId);
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error fetching book information: {ex.Message}");
            bookInfoItem = null; // Set to null on error
        }
        finally
        {
            isLoading = false;
        }
    }
}
